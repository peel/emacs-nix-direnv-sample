* Emacs + Nix + Direnv = Sandbox
** Emacs setup
use-package setup...
#+BEGIN_SRC elisp :tangle default.el
(require 'package)
(package-initialize 'noactivate)
(eval-when-compile
  (require 'use-package))
#+END_SRC
Now the important packages
#+BEGIN_SRC elisp :tangle default.el
(use-package nix-sandbox)
(use-package direnv
  :config (direnv-mode))
#+END_SRC
** Emacs environment
This is how you setup emacs with nix, but you can skip it.
#+BEGIN_SRC nix :tangle default.nix
{ pkgs ? import <nixpkgs> {} }:

let
  myEmacsConfig = ./default.el;
  emacsWithPackages = (pkgs.emacsPackagesNgGen pkgs.emacs).emacsWithPackages;
in
  emacsWithPackages (epkgs: (with epkgs.melpaPackages; [
    (pkgs.runCommand "default.el" {} ''
    mkdir -p $out/share/emacs/site-lisp
    cp ${myEmacsConfig} $out/share/emacs/site-lisp/default.el
    '')
    
    use-package
    direnv
    nix-sandbox
  ]))
#+END_SRC
** Sample sandbox
Direnv ~.envrc~ that enables per-dir automated environments
#+BEGIN_SRC sh :tangle .envrc
use_nix
#+END_SRC
~shell.nix~ env you put in project to predefine environment
#+BEGIN_SRC nix :tangle shell.nix
{ pkgs ? import <nixpkgs> {} }:

pkgs.mkShell {
  buildInputs = with pkgs; [ direnv hello ];
  shellHook = ''
  eval $(direnv hook bash)
  direnv allow .
  '';
}
#+END_SRC
** Running
#+BEGIN_SRC sh :noexport
nix build
nix run
#+END_SRC
Now run the delivered emacs w/ config (making sure you're running the right config) by
#+BEGIN_SRC sh :noexport
./result/bin/emacs -q -l default.el
#+END_SRC
This gets you the pre-configured Emacs you've seen above. Now run following steps in this repo buffer to see the:
#+BEGIN_SRC elisp :tangle verify.el
(progn 
  (let ((tmp-buffer (generate-new-buffer "sample")))
    (switch-to-buffer tmp-buffer))
  (mesasage (concat "Sandbox: " (nix-current-sandbox)))
  (message (concat "From sandbox: " (shell-command-to-string "hello")))
  (switch-to-buffer-other-window "*Messages*"))
#+END_SRC
** One more thing
A [[https://matthewbauer.us/blog/static-nix.html][statically linked]] nix can easily run the preconfigured setup anywhere:
#+BEGIN_SRC sh :noexport
curl https://matthewbauer.us/nix sh -s run --store $HOME/.cache/nix/store -f https://github.com/peel/emacs-nix-direnv-sample/archive/master.tar.gz -c emacs
#+END_SRC
